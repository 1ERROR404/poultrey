import { useEffect, useState, useRef } from "react";
import { useQuery } from "@tanstack/react-query";
import { useRoute, Link, useLocation } from "wouter";
import { useLanguage } from "@/hooks/use-language";
import { useCurrency } from "@/contexts/currency-context";
import { useCart } from "@/contexts/cart-context";
import ProductBadge from "@/components/ui/product-badge";
import FeaturedProducts from "@/components/products/featured-products";
import { Button } from "@/components/ui/button";
import { 
  Tabs, 
  TabsContent, 
  TabsList, 
  TabsTrigger 
} from "@/components/ui/tabs";
import { 
  ShoppingCart, 
  Check, 
  Share2, 
  Truck, 
  ShieldCheck, 
  RefreshCw, 
  Plus, 
  Minus,
  ChevronRight,
  ChevronLeft,
  Star,
  Zap,
  Heart,
  Info,
  ThumbsUp,
  Calendar,
  User,
  MessageSquare,
  Send,
  ChevronDown
} from "lucide-react";
import { Skeleton } from "@/components/ui/skeleton";
import { Product, Category } from "@shared/schema";
import { Helmet } from "react-helmet";
import { cn } from "@/lib/utils";
import { 
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip";

export default function ProductDetailPage() {
  const { t, language, isRtl } = useLanguage();
  const { formatCurrency } = useCurrency();
  const { addToCart } = useCart();
  const [match, params] = useRoute("/products/:slug");
  const [, navigate] = useLocation();
  const slug = params?.slug || "";
  const [quantity, setQuantity] = useState(1);
  const [activeImage, setActiveImage] = useState(0);
  const [isAddingToCart, setIsAddingToCart] = useState(false);
  const [isWishlistAdded, setIsWishlistAdded] = useState(false);
  const [isZoomed, setIsZoomed] = useState(false);
  const [showVideo, setShowVideo] = useState(false);
  const [videoUrl, setVideoUrl] = useState<string>("");
  const [descriptionImages, setDescriptionImages] = useState<string[]>([]);
  const [specificationImages, setSpecificationImages] = useState<string[]>([]);
  const imageContainerRef = useRef<HTMLDivElement>(null);
  const videoRef = useRef<HTMLVideoElement>(null);
  
  // Simulate multiple product images - in a real scenario, these would come from the API
  const [productImages, setProductImages] = useState<Array<{id: number, url: string}>>([
    { id: 1, url: '' }, // Main image (will be replaced with product.imageUrl)
    { id: 2, url: '' }, // We'll use the same image for demo purposes
    { id: 3, url: '' }, // We'll use the same image for demo purposes
    { id: 4, url: '' }  // We'll use the same image for demo purposes
  ]);

  const { data: product, isLoading, error } = useQuery<Product>({
    queryKey: [`/api/products/${slug}`],
  });
  
  const { data: category } = useQuery<Category>({
    queryKey: [`/api/categories/${product?.categoryId}`],
    enabled: !!product?.categoryId,
  });

  // Calculate discount percentage if product has originalPrice
  const discountPercentage = product?.originalPrice 
    ? Math.round(((parseFloat(product.originalPrice) - parseFloat(product.price)) / parseFloat(product.originalPrice)) * 100) 
    : 0;

  // Handle image zooming
  const handleImageZoom = (e: React.MouseEvent<HTMLDivElement>) => {
    if (!isZoomed || !imageContainerRef.current) return;
    
    const container = imageContainerRef.current;
    const rect = container.getBoundingClientRect();
    
    // Calculate mouse position relative to the container (0 to 1)
    const x = (e.clientX - rect.left) / rect.width;
    const y = (e.clientY - rect.top) / rect.height;
    
    // Move the background image based on mouse position
    container.style.transformOrigin = `${x * 100}% ${y * 100}%`;
  };

  // Update product images and media once product is loaded
  useEffect(() => {
    if (product) {
      // Set main and additional images
      const images = [{ id: 1, url: product.imageUrl }];
      
      // Add any additional images if they exist
      if (product.additionalImages && product.additionalImages.length > 0) {
        product.additionalImages.forEach((url, index) => {
          images.push({ id: index + 2, url });
        });
      } else {
        // Create placeholder images for demo (would be from API in a real app)
        images.push({ id: 2, url: product.imageUrl });
        images.push({ id: 3, url: product.imageUrl });
        images.push({ id: 4, url: product.imageUrl });
      }
      
      setProductImages(images);
      
      // Set video URL if available
      if (product.videoUrl) {
        setVideoUrl(product.videoUrl);
      }
      
      // Set description and specification images if available
      if (product.descriptionImages && product.descriptionImages.length > 0) {
        setDescriptionImages(product.descriptionImages);
      }
      
      if (product.specificationImages && product.specificationImages.length > 0) {
        setSpecificationImages(product.specificationImages);
      }
    }
  }, [product]);

  if (isLoading) {
    return (
      <div className="py-8 bg-white">
        <div className="container mx-auto px-4">
          {/* Breadcrumb skeleton */}
          <div className="mb-8 flex items-center">
            <Skeleton className="h-4 w-16" />
            <Skeleton className="h-4 w-4 mx-2 rounded-full" />
            <Skeleton className="h-4 w-20" />
            <Skeleton className="h-4 w-4 mx-2 rounded-full" />
            <Skeleton className="h-4 w-32" />
          </div>
          
          <div className="bg-white rounded-xl shadow-sm overflow-hidden border border-gray-200">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-12 p-8">
              <div>
                <Skeleton className="w-full aspect-square rounded-xl" />
                <div className="flex mt-4 space-x-2">
                  <Skeleton className="w-20 h-20 rounded-md" />
                  <Skeleton className="w-20 h-20 rounded-md" />
                  <Skeleton className="w-20 h-20 rounded-md" />
                </div>
              </div>
              <div>
                <Skeleton className="h-8 w-3/4 mb-2" />
                <Skeleton className="h-4 w-1/2 mb-6" />
                <Skeleton className="h-8 w-1/3 mb-4" />
                <Skeleton className="h-5 w-1/4 mb-6" />
                <Skeleton className="h-4 w-full mb-2" />
                <Skeleton className="h-4 w-full mb-2" />
                <Skeleton className="h-4 w-3/4 mb-6" />
                <div className="flex space-x-4 mb-6">
                  <Skeleton className="h-10 w-32" />
                  <Skeleton className="h-10 w-32" />
                </div>
                <Skeleton className="h-10 w-full mb-6" />
                <Skeleton className="h-24 w-full rounded-xl" />
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  if (error || !product) {
    return (
      <div className="py-16 bg-white">
        <div className="container mx-auto px-4 text-center">
          <h1 className="text-3xl font-bold mb-4 text-gray-900">Product Not Found</h1>
          <p className="mb-6 text-gray-600">The product you are looking for does not exist or has been removed.</p>
          <Button asChild variant="default" className="bg-primary-600 hover:bg-primary-700">
            <Link href="/products">Browse All Products</Link>
          </Button>
        </div>
      </div>
    );
  }

  const productName = language === "ar" && product.nameAr ? product.nameAr : product.name;
  const productDescription = language === "ar" && product.descriptionAr ? product.descriptionAr : product.description;
  const badgeType = language === "ar" && product.badgeAr ? product.badgeAr : product.badge;
  const categoryName = language === "ar" && category?.nameAr ? category.nameAr : category?.name;

  return (
    <>
      <Helmet>
        <title>{productName} - Poultry Gear</title>
        <meta name="description" content={productDescription} />
        <meta property="og:title" content={`${productName} - Poultry Gear`} />
        <meta property="og:description" content={productDescription} />
        <meta property="og:image" content={product.imageUrl} />
        <link rel="canonical" href={`https://poultrygear.com/products/${slug}`} />
      </Helmet>
      
      {/* Breadcrumb navigation */}
      <div className="bg-gray-50 border-b border-gray-200">
        <div className="container mx-auto px-4 py-3">
          <div className={cn(
            "flex items-center text-sm text-gray-600",
            isRtl && "flex-row-reverse"
          )}>
            <Link href="/" className="hover:text-primary-600 transition-colors">
              Home
            </Link>
            <ChevronRight className={cn("h-4 w-4 mx-2", isRtl && "rotate-180")} />
            <Link href="/products" className="hover:text-primary-600 transition-colors">
              Products
            </Link>
            {category && (
              <>
                <ChevronRight className={cn("h-4 w-4 mx-2", isRtl && "rotate-180")} />
                <Link href={`/categories/${category.slug}`} className="hover:text-primary-600 transition-colors">
                  {categoryName}
                </Link>
              </>
            )}
            <ChevronRight className={cn("h-4 w-4 mx-2", isRtl && "rotate-180")} />
            <span className="text-gray-900 font-medium truncate max-w-[200px]">{productName}</span>
          </div>
        </div>
      </div>
      
      <div className="py-8 bg-white">
        <div className="container mx-auto px-4">
          <div className="bg-white rounded-xl border border-gray-200 overflow-hidden mb-12 shadow-sm">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-8 lg:gap-12 p-6 lg:p-8">
              {/* Product Images */}
              <div className="product-images">
                {/* Main product image or video */}
                {showVideo && videoUrl ? (
                  <div className="relative rounded-xl overflow-hidden border border-gray-200 mb-4">
                    <div className="w-full aspect-square">
                      <video 
                        ref={videoRef}
                        src={videoUrl}
                        controls
                        className="w-full h-full object-contain p-4"
                        poster={product.imageUrl}
                      />
                    </div>
                    <button 
                      onClick={() => setShowVideo(false)}
                      className="absolute top-3 right-3 p-2 bg-black/50 text-white rounded-full"
                      aria-label="Close video"
                    >
                      <ChevronLeft className="h-4 w-4" />
                    </button>
                  </div>
                ) : (
                  <div 
                    ref={imageContainerRef}
                    className={cn(
                      "relative rounded-xl overflow-hidden border border-gray-200 mb-4 cursor-pointer",
                      isZoomed && "overflow-hidden"
                    )}
                    onClick={() => setIsZoomed(!isZoomed)}
                    onMouseMove={handleImageZoom}
                    onMouseLeave={() => isZoomed && setIsZoomed(false)}
                  >
                    <div className={cn(
                      "w-full aspect-square transition-transform duration-200 relative",
                      isZoomed && "scale-150"
                    )}>
                      <img 
                        src={productImages[activeImage].url || product.imageUrl} 
                        alt={productName}
                        className="w-full h-full object-contain p-4"
                      />
                    </div>
                    
                    {/* Controls and badges */}
                    <div className="absolute top-3 left-3 z-10 flex space-x-2">
                      {badgeType && <ProductBadge type={badgeType} />}
                      <TooltipProvider>
                        <Tooltip>
                          <TooltipTrigger asChild>
                            <button 
                              onClick={(e) => {
                                e.stopPropagation();
                                setIsWishlistAdded(!isWishlistAdded);
                              }} 
                              className={cn(
                                "p-2 bg-white rounded-full shadow-md transition-all hover:shadow-lg",
                                isWishlistAdded ? "text-red-500" : "text-gray-400"
                              )}
                              aria-label="Add to wishlist"
                            >
                              <Heart className="h-5 w-5" fill={isWishlistAdded ? "currentColor" : "none"} />
                            </button>
                          </TooltipTrigger>
                          <TooltipContent>
                            <p>Add to wishlist</p>
                          </TooltipContent>
                        </Tooltip>
                      </TooltipProvider>
                    </div>
                    
                    {/* Zoom hint */}
                    <div className="absolute bottom-3 right-3 bg-black/50 text-white text-xs px-2 py-1 rounded-md flex items-center">
                      <div className="mr-1">
                        {isZoomed ? <ChevronLeft className="h-3 w-3" /> : <Plus className="h-3 w-3" />}
                      </div>
                      {isZoomed ? "Click to reset" : "Click to zoom"}
                    </div>
                    
                    {/* Discount badge */}
                    {discountPercentage > 0 && (
                      <div className="absolute top-3 right-3 bg-red-600 text-white text-xs font-bold px-2 py-1 rounded-md">
                        {discountPercentage}% OFF
                      </div>
                    )}
                  </div>
                )}
                  
                  {/* Controls and badges */}
                  <div className="absolute top-3 left-3 z-10 flex space-x-2">
                    {badgeType && <ProductBadge type={badgeType} />}
                    <TooltipProvider>
                      <Tooltip>
                        <TooltipTrigger asChild>
                          <button 
                            onClick={(e) => {
                              e.stopPropagation();
                              setIsWishlistAdded(!isWishlistAdded);
                            }} 
                            className={cn(
                              "p-2 bg-white rounded-full shadow-md transition-all hover:shadow-lg",
                              isWishlistAdded ? "text-red-500" : "text-gray-400"
                            )}
                            aria-label="Add to wishlist"
                          >
                            <Heart className="h-5 w-5" fill={isWishlistAdded ? "currentColor" : "none"} />
                          </button>
                        </TooltipTrigger>
                        <TooltipContent>
                          <p>Add to wishlist</p>
                        </TooltipContent>
                      </Tooltip>
                    </TooltipProvider>
                  </div>
                  
                  {/* Zoom hint */}
                  <div className="absolute bottom-3 right-3 bg-black/50 text-white text-xs px-2 py-1 rounded-md flex items-center">
                    <div className="mr-1">
                      {isZoomed ? <ChevronLeft className="h-3 w-3" /> : <Plus className="h-3 w-3" />}
                    </div>
                    {isZoomed ? "Click to reset" : "Click to zoom"}
                  </div>
                  
                  {/* Discount badge */}
                  {discountPercentage > 0 && (
                    <div className="absolute top-3 right-3 bg-red-600 text-white text-xs font-bold px-2 py-1 rounded-md">
                      {discountPercentage}% OFF
                    </div>
                  )}
                </div>
                
                {/* Image thumbnails navigation with arrows */}
                <div className="relative">
                  <div className="overflow-x-auto pb-2 hide-scrollbar">
                    <div className="flex gap-2 justify-center">
                      {productImages.map((img, idx) => (
                        <button
                          key={img.id}
                          onClick={() => setActiveImage(idx)}
                          className={cn(
                            "border-2 rounded-md overflow-hidden w-16 h-16 flex-shrink-0 transition-all",
                            activeImage === idx ? "border-green-600" : "border-gray-200 hover:border-gray-300"
                          )}
                        >
                          <img 
                            src={img.url || product.imageUrl} 
                            alt={`Product view ${idx + 1}`}
                            className="w-full h-full object-cover"
                          />
                        </button>
                      ))}
                    </div>
                  </div>
                  
                  {/* Thumbnail navigation arrows */}
                  {productImages.length > 4 && (
                    <>
                      <button 
                        className="absolute left-0 top-1/2 -translate-y-1/2 w-8 h-8 bg-white shadow-md rounded-full flex items-center justify-center border border-gray-200 text-gray-600 hover:text-primary-600"
                        onClick={() => {
                          // Would implement scroll logic here in a real app
                        }}
                      >
                        <ChevronLeft className="h-4 w-4" />
                      </button>
                      <button 
                        className="absolute right-0 top-1/2 -translate-y-1/2 w-8 h-8 bg-white shadow-md rounded-full flex items-center justify-center border border-gray-200 text-gray-600 hover:text-primary-600"
                        onClick={() => {
                          // Would implement scroll logic here in a real app
                        }}
                      >
                        <ChevronRight className="h-4 w-4" />
                      </button>
                    </>
                  )}
                </div>
              </div>
              
              {/* Product Details */}
              <div className={cn(
                "product-details flex flex-col",
                isRtl && "text-right"
              )}>
                {/* Header with name and ratings */}
                <div>
                  <div className="flex items-center text-xs text-primary-600 font-medium mb-2">
                    <span>{categoryName}</span>
                    {product.inStock && (
                      <>
                        <span className="mx-2">•</span>
                        <span className="text-green-600 flex items-center">
                          <Check className="h-3 w-3 mr-1" />
                          In Stock
                        </span>
                      </>
                    )}
                  </div>
                  
                  <h1 className="text-2xl lg:text-3xl font-bold text-gray-900 mb-2">
                    {productName}
                  </h1>
                  
                  <div className="flex items-center mb-4">
                    <div className="flex">
                      {[1, 2, 3, 4, 5].map((_, index) => (
                        <Star 
                          key={index} 
                          className="h-4 w-4" 
                          fill={index < 4 ? "#FFA41C" : "#E5E7EB"}
                          color={index < 4 ? "#FFA41C" : "#E5E7EB"}
                        />
                      ))}
                    </div>
                    <span className="text-xs text-gray-500 ml-2">(24 reviews)</span>
                  </div>
                </div>
                
                {/* Price */}
                <div className="mb-6">
                  <div className="flex items-baseline">
                    <span className="text-2xl font-bold text-primary-600 mr-2">
                      {formatCurrency(product.price)}
                    </span>
                    {product.originalPrice && (
                      <span className="text-lg text-gray-500 line-through">
                        {formatCurrency(product.originalPrice)}
                      </span>
                    )}
                  </div>
                  {discountPercentage > 0 && (
                    <p className="text-red-600 text-sm font-medium mt-1">
                      You save: {formatCurrency((parseFloat(product.originalPrice) - parseFloat(product.price)).toString())} ({discountPercentage}%)
                    </p>
                  )}
                </div>
                
                {/* Short description */}
                <div className="mb-6" dir={isRtl ? "rtl" : "ltr"}>
                  <p className="text-gray-700 leading-relaxed">
                    {productDescription.split('.')[0]}.
                  </p>
                </div>
                
                {/* Quantity selector and buttons */}
                <div className="mb-6">
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    Quantity
                  </label>
                  <div className="flex items-center mb-6">
                    <div className="flex items-center border border-gray-300 rounded-md">
                      <button 
                        onClick={() => setQuantity(Math.max(1, quantity - 1))}
                        className="px-3 py-2 text-gray-600 hover:bg-gray-100 focus:outline-none"
                        aria-label="Decrease quantity"
                      >
                        <Minus className="h-4 w-4" />
                      </button>
                      <span className="px-3 py-2 text-gray-900 border-x border-gray-300 min-w-[40px] text-center">
                        {quantity}
                      </span>
                      <button 
                        onClick={() => setQuantity(quantity + 1)}
                        className="px-3 py-2 text-gray-600 hover:bg-gray-100 focus:outline-none"
                        aria-label="Increase quantity"
                      >
                        <Plus className="h-4 w-4" />
                      </button>
                    </div>
                  </div>
                  
                  <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
                    <Button 
                      className="bg-green-700 hover:bg-green-800 text-white h-12"
                      onClick={() => {
                        if (product) {
                          setIsAddingToCart(true);
                          // Add slight delay to show loading effect
                          setTimeout(() => {
                            addToCart(product, quantity);
                            setIsAddingToCart(false);
                          }, 500);
                        }
                      }}
                      disabled={isAddingToCart || !product.inStock}
                    >
                      <ShoppingCart className="h-5 w-5 mr-2" />
                      {isAddingToCart ? 'Adding...' : 'Add to Cart'}
                    </Button>
                    <Button 
                      variant="outline" 
                      className="border-gray-300 h-12 bg-yellow-500 hover:bg-yellow-600 text-white border-0"
                      onClick={() => {
                        if (product) {
                          addToCart(product, quantity);
                          navigate('/cart');
                        }
                      }}
                      disabled={!product.inStock}
                    >
                      <Zap className="h-5 w-5 mr-2" />
                      Buy Now
                    </Button>
                  </div>
                </div>
                
                {/* Features */}
                <div className="bg-gray-50 p-4 rounded-xl border border-gray-200 mb-6">
                  <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                    <div className="flex items-start">
                      <Truck className="h-5 w-5 text-primary-600 mt-0.5 mr-2 flex-shrink-0" />
                      <div>
                        <h4 className="font-medium text-gray-900">Free Shipping</h4>
                        <p className="text-gray-600 text-sm">On orders over $100</p>
                      </div>
                    </div>
                    <div className="flex items-start">
                      <ShieldCheck className="h-5 w-5 text-primary-600 mt-0.5 mr-2 flex-shrink-0" />
                      <div>
                        <h4 className="font-medium text-gray-900">2-Year Warranty</h4>
                        <p className="text-gray-600 text-sm">Manufacturer's warranty</p>
                      </div>
                    </div>
                    <div className="flex items-start">
                      <Share2 className="h-5 w-5 text-primary-600 mt-0.5 mr-2 flex-shrink-0" />
                      <div>
                        <h4 className="font-medium text-gray-900">Share Product</h4>
                        <div className="flex space-x-2 mt-1">
                          <button className="text-gray-500 hover:text-primary-600">
                            <svg className="h-4 w-4" viewBox="0 0 24 24" fill="currentColor">
                              <path d="M22.675 0h-21.35c-.732 0-1.325.593-1.325 1.325v21.351c0 .731.593 1.324 1.325 1.324h11.495v-9.294h-3.128v-3.622h3.128v-2.671c0-3.1 1.893-4.788 4.659-4.788 1.325 0 2.463.099 2.795.143v3.24l-1.918.001c-1.504 0-1.795.715-1.795 1.763v2.313h3.587l-.467 3.622h-3.12v9.293h6.116c.73 0 1.323-.593 1.323-1.325v-21.35c0-.732-.593-1.325-1.325-1.325z" />
                            </svg>
                          </button>
                          <button className="text-gray-500 hover:text-primary-600">
                            <svg className="h-4 w-4" viewBox="0 0 24 24" fill="currentColor">
                              <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z" />
                            </svg>
                          </button>
                          <button className="text-gray-500 hover:text-primary-600">
                            <svg className="h-4 w-4" viewBox="0 0 24 24" fill="currentColor">
                              <path d="M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z" />
                            </svg>
                          </button>
                        </div>
                      </div>
                    </div>
                    <div className="flex items-start">
                      <RefreshCw className="h-5 w-5 text-primary-600 mt-0.5 mr-2 flex-shrink-0" />
                      <div>
                        <h4 className="font-medium text-gray-900">Easy Returns</h4>
                        <p className="text-gray-600 text-sm">30-day return policy</p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            {/* Tabs section */}
            <div className="px-6 lg:px-8 pb-8 border-t border-gray-200 pt-6">
              <Tabs defaultValue="description" className="w-full">
                <TabsList className="grid w-full grid-cols-3 lg:w-auto">
                  <TabsTrigger value="description" className="text-sm font-medium">Description</TabsTrigger>
                  <TabsTrigger value="specs" className="text-sm font-medium">Specifications</TabsTrigger>
                  <TabsTrigger value="reviews" className="text-sm font-medium">Reviews (24)</TabsTrigger>
                </TabsList>
                
                {/* Description Tab */}
                <TabsContent value="description" className="pt-6 pb-2" dir={isRtl ? "rtl" : "ltr"}>
                  <div className="prose max-w-none text-gray-700">
                    <p className="mb-4 leading-relaxed">{productDescription}</p>
                    
                    <div className="bg-green-50 border-l-4 border-green-600 p-4 rounded-r-md mb-6">
                      <h4 className="text-green-800 font-semibold text-lg flex items-center">
                        <ThumbsUp className="h-5 w-5 mr-2" /> Key Features
                      </h4>
                      <p className="text-green-700 mt-2">
                        This product is designed specifically for poultry farmers who value efficiency, durability, and the welfare of their birds.
                      </p>
                    </div>
                    
                    <h3 className="text-lg font-semibold text-gray-900 mt-6 mb-3">Key Benefits:</h3>
                    <ul className="list-disc pl-5 space-y-2 mb-6">
                      <li>Designed for optimal poultry health and nutrition</li>
                      <li>Constructed from durable, food-safe materials</li>
                      <li>Easy to clean and maintain</li>
                      <li>Suitable for both commercial and backyard poultry operations</li>
                      <li>Weather resistant for indoor and outdoor use</li>
                    </ul>
                    
                    <div className="mt-8 mb-6">
                      <h3 className="text-lg font-semibold text-gray-900 mb-4">Use Cases</h3>
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div className="bg-white border border-gray-200 rounded-lg p-4 shadow-sm">
                          <h4 className="font-medium text-gray-900 mb-2">Commercial Farms</h4>
                          <p className="text-gray-600 text-sm">
                            Ideal for large-scale operations requiring reliable and efficient equipment that can withstand continuous use.
                          </p>
                        </div>
                        <div className="bg-white border border-gray-200 rounded-lg p-4 shadow-sm">
                          <h4 className="font-medium text-gray-900 mb-2">Backyard Poultry</h4>
                          <p className="text-gray-600 text-sm">
                            Perfect for hobbyists and small-scale poultry keepers looking for quality equipment without industrial-scale complexity.
                          </p>
                        </div>
                      </div>
                    </div>
                    
                    <div className="border-t border-gray-200 pt-6 mt-6">
                      <h3 className="text-lg font-semibold text-gray-900 mb-3">Maintenance Tips</h3>
                      <p className="mb-3">
                        To ensure optimal performance and longevity of your product, follow these simple maintenance guidelines:
                      </p>
                      <ol className="list-decimal pl-5 space-y-2">
                        <li>Clean regularly with warm soapy water</li>
                        <li>Check for wear and tear monthly</li>
                        <li>Store in a dry location when not in use</li>
                        <li>Apply food-grade lubricant to moving parts as needed</li>
                      </ol>
                    </div>
                  </div>
                </TabsContent>
                
                {/* Specifications Tab */}
                <TabsContent value="specs" className="pt-6 pb-2">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                    <div>
                      <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                        <Info className="h-5 w-5 text-primary-600 mr-2" />
                        Technical Specifications
                      </h3>
                      <div className="bg-white rounded-lg border border-gray-200 shadow-sm overflow-hidden">
                        <div className="grid grid-cols-3 border-b border-gray-200">
                          <div className="py-3 px-4 bg-gray-50 font-medium text-gray-900">Material</div>
                          <div className="py-3 px-4 col-span-2">High-quality plastic and metal components</div>
                        </div>
                        <div className="grid grid-cols-3 border-b border-gray-200">
                          <div className="py-3 px-4 bg-gray-50 font-medium text-gray-900">Dimensions</div>
                          <div className="py-3 px-4 col-span-2">30 x 20 x 15 cm</div>
                        </div>
                        <div className="grid grid-cols-3 border-b border-gray-200">
                          <div className="py-3 px-4 bg-gray-50 font-medium text-gray-900">Weight</div>
                          <div className="py-3 px-4 col-span-2">2.5 kg</div>
                        </div>
                        <div className="grid grid-cols-3 border-b border-gray-200">
                          <div className="py-3 px-4 bg-gray-50 font-medium text-gray-900">Color</div>
                          <div className="py-3 px-4 col-span-2">Green/Natural</div>
                        </div>
                        <div className="grid grid-cols-3 border-b border-gray-200">
                          <div className="py-3 px-4 bg-gray-50 font-medium text-gray-900">Warranty</div>
                          <div className="py-3 px-4 col-span-2">2 years manufacturer warranty</div>
                        </div>
                        <div className="grid grid-cols-3 border-b border-gray-200">
                          <div className="py-3 px-4 bg-gray-50 font-medium text-gray-900">Usage</div>
                          <div className="py-3 px-4 col-span-2">Indoor/Outdoor</div>
                        </div>
                        <div className="grid grid-cols-3">
                          <div className="py-3 px-4 bg-gray-50 font-medium text-gray-900">Capacity</div>
                          <div className="py-3 px-4 col-span-2">Suitable for up to 30 birds</div>
                        </div>
                      </div>
                      
                      <div className="mt-8">
                        <h3 className="text-lg font-semibold text-gray-900 mb-4">Certification</h3>
                        <div className="bg-green-50 p-4 rounded-lg border border-green-200">
                          <div className="flex items-start">
                            <ShieldCheck className="h-6 w-6 text-green-600 mt-0.5 mr-3 flex-shrink-0" />
                            <div>
                              <h4 className="font-medium text-gray-900">Quality Certified</h4>
                              <p className="text-gray-700 mt-1">
                                This product meets or exceeds industry standards for poultry equipment, ensuring safe and reliable operation.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    
                    <div>
                      <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                        <Check className="h-5 w-5 text-primary-600 mr-2" />
                        Package Includes
                      </h3>
                      <div className="bg-white rounded-lg border border-gray-200 p-5 shadow-sm">
                        <ul className="space-y-3">
                          <li className="flex items-start">
                            <Check className="h-5 w-5 text-green-600 mt-0.5 mr-2 flex-shrink-0" />
                            <span className="text-gray-800">1 x {productName}</span>
                          </li>
                          <li className="flex items-start">
                            <Check className="h-5 w-5 text-green-600 mt-0.5 mr-2 flex-shrink-0" />
                            <span className="text-gray-800">Assembly instructions</span>
                          </li>
                          <li className="flex items-start">
                            <Check className="h-5 w-5 text-green-600 mt-0.5 mr-2 flex-shrink-0" />
                            <span className="text-gray-800">Mounting hardware</span>
                          </li>
                          <li className="flex items-start">
                            <Check className="h-5 w-5 text-green-600 mt-0.5 mr-2 flex-shrink-0" />
                            <span className="text-gray-800">User manual</span>
                          </li>
                          <li className="flex items-start">
                            <Check className="h-5 w-5 text-green-600 mt-0.5 mr-2 flex-shrink-0" />
                            <span className="text-gray-800">Warranty card</span>
                          </li>
                        </ul>
                      </div>
                      
                      <h3 className="text-lg font-semibold text-gray-900 mt-8 mb-4">Compatibility</h3>
                      <div className="bg-white rounded-lg border border-gray-200 p-5 shadow-sm">
                        <p className="text-gray-700 leading-relaxed">
                          Compatible with most standard coops and poultry housing systems. Suitable for chickens, ducks, and other poultry species.
                        </p>
                        
                        <div className="mt-4 pt-4 border-t border-gray-200">
                          <h4 className="font-medium text-gray-900 mb-2">Tested With:</h4>
                          <div className="grid grid-cols-2 gap-2">
                            <div className="text-sm bg-gray-50 rounded-md p-2 text-gray-800">Chicken coops</div>
                            <div className="text-sm bg-gray-50 rounded-md p-2 text-gray-800">Duck houses</div>
                            <div className="text-sm bg-gray-50 rounded-md p-2 text-gray-800">Free-range systems</div>
                            <div className="text-sm bg-gray-50 rounded-md p-2 text-gray-800">Broiler houses</div>
                          </div>
                        </div>
                      </div>
                      
                      <div className="mt-8">
                        <h3 className="text-lg font-semibold text-gray-900 mb-4">Downloads</h3>
                        <div className="space-y-3">
                          <a href="#" className="flex items-center p-3 bg-white rounded-lg border border-gray-200 hover:bg-gray-50 transition-colors shadow-sm">
                            <div className="w-10 h-10 rounded-lg bg-red-100 flex items-center justify-center mr-3 flex-shrink-0">
                              <svg className="w-5 h-5 text-red-600" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M13 7H7v2h6V7zm0 4H7v2h6v-2z" />
                                <path fillRule="evenodd" d="M7 2h8a2 2 0 012 2v12a2 2 0 01-2 2H5a2 2 0 01-2-2V6l4-4zm1 0v4h8v10H5V6h3V2z" clipRule="evenodd" />
                              </svg>
                            </div>
                            <div>
                              <h4 className="font-medium text-gray-900">Product Manual</h4>
                              <p className="text-xs text-gray-500">PDF - 2.5 MB</p>
                            </div>
                          </a>
                          <a href="#" className="flex items-center p-3 bg-white rounded-lg border border-gray-200 hover:bg-gray-50 transition-colors shadow-sm">
                            <div className="w-10 h-10 rounded-lg bg-blue-100 flex items-center justify-center mr-3 flex-shrink-0">
                              <svg className="w-5 h-5 text-blue-600" fill="currentColor" viewBox="0 0 20 20">
                                <path fillRule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z" clipRule="evenodd" />
                              </svg>
                            </div>
                            <div>
                              <h4 className="font-medium text-gray-900">Assembly Guide</h4>
                              <p className="text-xs text-gray-500">PDF - 1.8 MB</p>
                            </div>
                          </a>
                        </div>
                      </div>
                    </div>
                  </div>
                </TabsContent>
                
                {/* Reviews Tab */}
                <TabsContent value="reviews" className="pt-6 pb-2">
                  <div className="space-y-8">
                    <div className="flex flex-col md:flex-row gap-8">
                      {/* Rating summary */}
                      <div className="md:w-1/3 bg-white border border-gray-200 p-5 rounded-xl shadow-sm">
                        <h3 className="text-lg font-semibold text-gray-900 mb-4">Customer Reviews</h3>
                        <div className="flex items-center mb-4">
                          <div className="flex mr-2">
                            {[1, 2, 3, 4, 5].map((_, index) => (
                              <Star 
                                key={index} 
                                className="h-5 w-5" 
                                fill={index < 4 ? "#FFA41C" : "#E5E7EB"}
                                color={index < 4 ? "#FFA41C" : "#E5E7EB"}
                              />
                            ))}
                          </div>
                          <span className="text-sm font-medium text-gray-800">4.0 out of 5</span>
                        </div>
                        <p className="text-gray-600 text-sm mb-5">Based on 24 reviews</p>
                        
                        {/* Rating breakdown */}
                        <div className="space-y-2">
                          {[5, 4, 3, 2, 1].map((rating) => (
                            <div key={rating} className="flex items-center">
                              <div className="w-12 text-right text-sm text-gray-600">{rating} stars</div>
                              <div className="flex-1 mx-3 h-2 rounded-full bg-gray-200 overflow-hidden">
                                <div 
                                  className="h-full bg-yellow-400"
                                  style={{ 
                                    width: `${rating === 4 ? '40' : rating === 5 ? '30' : rating === 3 ? '20' : '5'}%` 
                                  }}
                                ></div>
                              </div>
                              <div className="w-12 text-left text-sm text-gray-600">
                                {rating === 4 ? '10' : rating === 5 ? '7' : rating === 3 ? '5' : rating === 2 ? '1' : '1'}
                              </div>
                            </div>
                          ))}
                        </div>
                        
                        <div className="mt-6 pt-6 border-t border-gray-200">
                          <Button className="w-full bg-green-700 hover:bg-green-800 text-white h-10">
                            Write a Review
                          </Button>
                        </div>
                      </div>
                      
                      {/* Reviews list */}
                      <div className="md:w-2/3 space-y-6">
                        {/* Featured review */}
                        <div className="bg-white border border-gray-200 rounded-xl overflow-hidden shadow-sm">
                          <div className="p-5 border-b border-gray-200 bg-gray-50">
                            <div className="flex justify-between items-start">
                              <div className="flex items-center">
                                <div className="w-10 h-10 rounded-full bg-green-100 flex items-center justify-center mr-3">
                                  <User className="w-5 h-5 text-green-600" />
                                </div>
                                <div>
                                  <h4 className="font-medium text-gray-900">Ahmed H.</h4>
                                  <div className="flex items-center">
                                    <span className="text-xs text-gray-500 mr-2 flex items-center">
                                      <Calendar className="w-3 h-3 mr-1" />
                                      June 12, 2024
                                    </span>
                                    <div className="flex">
                                      {[1, 2, 3, 4, 5].map((_, index) => (
                                        <Star 
                                          key={index} 
                                          className="h-3 w-3" 
                                          fill={index < 5 ? "#FFA41C" : "#E5E7EB"}
                                          color={index < 5 ? "#FFA41C" : "#E5E7EB"}
                                        />
                                      ))}
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <div className="bg-green-100 text-green-800 text-xs font-semibold px-2 py-1 rounded">
                                Verified Purchase
                              </div>
                            </div>
                          </div>
                          <div className="p-5">
                            <h5 className="font-semibold text-gray-900 mb-2">Perfect for my farm!</h5>
                            <p className="text-gray-700 mb-4">
                              I've been using this product on my farm for about 3 months now and it's been a game changer. Easy to set up, durable, and my chickens love it. Would highly recommend for any serious poultry farmer.
                            </p>
                            <div className="flex items-center justify-between">
                              <div className="flex items-center text-gray-500 text-sm">
                                <button className="flex items-center hover:text-gray-700">
                                  <ThumbsUp className="w-4 h-4 mr-1" />
                                  Helpful (15)
                                </button>
                              </div>
                              <button className="text-gray-500 text-sm hover:text-gray-700 flex items-center">
                                <MessageSquare className="w-4 h-4 mr-1" />
                                Reply
                              </button>
                            </div>
                          </div>
                        </div>
                        
                        {/* More reviews */}
                        <div className="bg-white border border-gray-200 rounded-xl overflow-hidden shadow-sm">
                          <div className="p-5 border-b border-gray-200">
                            <div className="flex justify-between items-start">
                              <div className="flex items-center">
                                <div className="w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center mr-3">
                                  <User className="w-5 h-5 text-blue-600" />
                                </div>
                                <div>
                                  <h4 className="font-medium text-gray-900">Sarah M.</h4>
                                  <div className="flex items-center">
                                    <span className="text-xs text-gray-500 mr-2 flex items-center">
                                      <Calendar className="w-3 h-3 mr-1" />
                                      May 28, 2024
                                    </span>
                                    <div className="flex">
                                      {[1, 2, 3, 4, 5].map((_, index) => (
                                        <Star 
                                          key={index} 
                                          className="h-3 w-3" 
                                          fill={index < 4 ? "#FFA41C" : "#E5E7EB"}
                                          color={index < 4 ? "#FFA41C" : "#E5E7EB"}
                                        />
                                      ))}
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div className="p-5">
                            <h5 className="font-semibold text-gray-900 mb-2">Good but could be better</h5>
                            <p className="text-gray-700 mb-4">
                              Product works well for what it is. I would have given 5 stars if it was a bit more durable, but overall it's a good purchase for the price.
                            </p>
                            <div className="flex items-center justify-between">
                              <div className="flex items-center text-gray-500 text-sm">
                                <button className="flex items-center hover:text-gray-700">
                                  <ThumbsUp className="w-4 h-4 mr-1" />
                                  Helpful (7)
                                </button>
                              </div>
                              <button className="text-gray-500 text-sm hover:text-gray-700 flex items-center">
                                <MessageSquare className="w-4 h-4 mr-1" />
                                Reply
                              </button>
                            </div>
                          </div>
                        </div>
                        
                        <div className="flex justify-center">
                          <Button variant="outline" className="border-gray-300 text-gray-700">
                            Load More Reviews
                            <ChevronDown className="ml-2 h-4 w-4" />
                          </Button>
                        </div>
                      </div>
                    </div>
                    
                    {/* Add review form (collapsed by default) */}
                    <div className="bg-white border border-gray-200 rounded-xl p-6 shadow-sm hidden">
                      <h3 className="text-lg font-semibold text-gray-900 mb-4">Write a Review</h3>
                      <div className="space-y-4">
                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-1">Rating</label>
                          <div className="flex">
                            {[1, 2, 3, 4, 5].map((rating) => (
                              <button 
                                key={rating}
                                className="text-gray-300 hover:text-yellow-400"
                              >
                                <Star className="h-6 w-6" />
                              </button>
                            ))}
                          </div>
                        </div>
                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-1">Review Title</label>
                          <input 
                            type="text" 
                            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                            placeholder="Summarize your experience"
                          />
                        </div>
                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-1">Review</label>
                          <textarea 
                            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 min-h-[120px]"
                            placeholder="Tell others about your experience with this product"
                          ></textarea>
                        </div>
                        <div className="flex justify-end">
                          <Button className="bg-primary-600 hover:bg-primary-700">
                            <Send className="h-4 w-4 mr-2" />
                            Submit Review
                          </Button>
                        </div>
                      </div>
                    </div>
                  </div>
                </TabsContent>
              </Tabs>
            </div>
          </div>
          
          {/* Related products section */}
          <div className="mt-10 bg-gray-50 py-10 border-t border-gray-200">
            <div className="container mx-auto px-4">
              <div className="flex items-center justify-between mb-8">
                <h2 className="text-2xl font-bold text-gray-900">Related Products</h2>
                <Button 
                  variant="outline" 
                  className="hidden md:flex border-gray-300 text-gray-700 hover:bg-gray-100"
                  asChild
                >
                  <Link href="/products">
                    View All Products
                    <ChevronRight className="ml-2 h-4 w-4" />
                  </Link>
                </Button>
              </div>
              <FeaturedProducts />
              
              <div className="mt-8 text-center md:hidden">
                <Button 
                  variant="outline" 
                  className="border-gray-300 text-gray-700 hover:bg-gray-100"
                  asChild
                >
                  <Link href="/products">
                    View All Products
                    <ChevronRight className="ml-2 h-4 w-4" />
                  </Link>
                </Button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
